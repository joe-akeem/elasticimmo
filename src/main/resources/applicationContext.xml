<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:elasticsearch="http://www.springframework.org/schema/data/elasticsearch"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/data/elasticsearch
	http://www.springframework.org/schema/data/elasticsearch/spring-elasticsearch-1.0.xsd
	http://www.springframework.org/schema/batch
	http://www.springframework.org/schema/batch/spring-batch-2.2.xsd">
 
	<context:component-scan base-package="de.joeakeem" />
	<elasticsearch:repositories base-package="de.joeakeem" elasticsearch-template-ref="elasticsearchTemplate"/>
 
 	<context:property-placeholder location="classpath:elasticimmo.properties" />
 	<elasticsearch:transport-client id="client" cluster-nodes="${cluster-nodes}"/>
 	
 	<bean name="elasticsearchTemplate" class="org.springframework.data.elasticsearch.core.ElasticsearchTemplate">
        <constructor-arg name="client" ref="client"/>
    </bean>
    
    <bean id="jobRepository"
		class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean">
		<property name="transactionManager" ref="transactionManager" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.batch.support.transaction.ResourcelessTransactionManager" />


	<bean id="jobLauncher"
		class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
	</bean>
	
	<batch:job id="openImmoImportJob">
		<batch:step id="importEstates" next="processProviders">
			<batch:tasklet>
				<batch:chunk reader="estateItemReader" writer="estateItemWriter"
					processor="estateItemProcessor" commit-interval="1">
				</batch:chunk>
			</batch:tasklet>
		</batch:step>
		<batch:step id="processProviders">
			<batch:tasklet>
				<batch:chunk reader="providerItemReader" writer="providerItemWriter"
					processor="providerItemProcessor" commit-interval="1">
				</batch:chunk>
			</batch:tasklet>
		</batch:step>
	</batch:job>
	
	<bean id="estateItemReader" class="org.springframework.batch.item.xml.StaxEventItemReader">
		<property name="fragmentRootElementName" value="immobilie" />
		<property name="resource" value="${openimmo.import.file}" />
		<property name="unmarshaller" ref="openImmoUnmarshaller" />
	</bean>
	
	<bean id="providerItemReader" class="org.springframework.batch.item.xml.StaxEventItemReader">
		<property name="fragmentRootElementName" value="anbieter" />
		<property name="resource" value="${openimmo.import.file}" />
		<property name="unmarshaller" ref="openImmoUnmarshaller" />
	</bean>
	
	<bean id="openImmoUnmarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
		<property name="classesToBeBound">
			<list>
				<value>de.joeakeem.elasticimmo.openimmo.model.Immobilie</value>
				<value>de.joeakeem.elasticimmo.openimmo.model.Anbieter</value>
			</list>
		</property>
	</bean>
	
	<bean id="wiGeoGisUnmarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
		<property name="classesToBeBound">
			<list>
				<value>de.joeakeem.elasticimmo.wigeogis.model.GEOCODE</value>
				<value>de.joeakeem.elasticimmo.wigeogis.model.GETKEY</value>
			</list>
		</property>
	</bean>

	<bean id="wiGeoGisRestTemplate" class="org.springframework.web.client.RestTemplate">
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
                	<property name="unmarshaller" ref="wiGeoGisUnmarshaller" />
                	<property name="marshaller" ref="wiGeoGisUnmarshaller" />
                </bean>
            </list>
        </property>
    </bean>
    
    <bean id="dozerBeanMapper" class="org.dozer.DozerBeanMapper">
		<property name="mappingFiles">
			<list>
				<value>de/joeakeem/elasticimmo/openimmo/dozer-mapping.xml</value>
			</list>
		</property>
	</bean>
</beans>